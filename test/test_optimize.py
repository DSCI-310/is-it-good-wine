import numpy as np
import pandas as pd
from sklearn.datasets import make_moons
from src.optimize import hp_optimizer
import pytest



# dummy data
X_train, y_train = make_moons(n_samples = 100)


# test whether the function returns hyperparameter and validation score
def test_hp_optimizer():
    # DESCRIPTION: Compare the columns names of the dataframe that generated by the hp_optimizer function is the same as the expected column names
    # ACTION: Use assert and == function to compare the column names
    # RETURNS: Return errors message if the column names are not the same, return none if the test pass

    actual_lr = hp_optimizer("lr", X_train, y_train)
    assert list(actual_lr.columns) == ['C', 'mean_train_scores', 'mean_cv_scores']
    actual_dtc = hp_optimizer('dtc', X_train, y_train)
    assert list(actual_dtc.columns) == ['max_depth', 'mean_cv_score']
    actual_svm = hp_optimizer('svm', X_train, y_train)